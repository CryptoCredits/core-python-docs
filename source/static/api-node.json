{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Credits Node API"
    },
    "host": "public.credits.works",
    "basePath": "/api/v1/node/<node-name>/api/v1",
    "schemes": [
        "http",
        "https"
    ],
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "node-name": {
            "type": "string",
            "name": "node-name",
            "in": "path"
        }
    },
    "paths": {
        "/status": {
            "get": {
                "tags": [
                    "node"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get node status",
                "description": "Retrieve blockchain node status by it's name.\n",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NodeStatus"
                        }
                    },
                    "401": {
                        "description": "Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "tags": [
                    "node"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Create transaction",
                "description": "Create transaction in the blockchain by posting it's stringified JSON marshalled contents to the node.",
                "parameters": [
                    {
                        "name": "json",
                        "description": "The JSON marshall output of the transaction.",
                        "in": "formData",
                        "requied": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResultObject"
                        }
                    },
                    "401": {
                        "description": "Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transaction/{tx_hash}": {
            "post": {
                "tags": [
                    "node"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get transaction",
                "description": "Get transaction from the blockchain node by it's hash.",
                "parameters": [
                    {
                        "name": "tx_hash",
                        "description": "Transaction hash.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResultObject"
                        }
                    },
                    "401": {
                        "description": "Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/state/{height}": {
            "get": {
                "tags": [
                    "node"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get blockchain state",
                "description": "Retrieve blockchain state by it's numeric height, provide 'head' for current height. Negative numbers track backwards from head. Positive numbers track forward from 0th block (genesis). State contents are defined at runtime by the user implementation.\n",
                "parameters": [
                    {
                        "name": "node_name",
                        "description": "Node name.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "height",
                        "description": "Blockchain height.",
                        "in": "path",
                        "type": "number",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResultObject"
                        }
                    },
                    "401": {
                        "description": "Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/block/{height}": {
            "get": {
                "tags": [
                    "node"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get blockchain block",
                "description": "Retrieve blockchain block by it's numeric height, provide 'head' for current height. Negative numbers track backwards from head. Positive numbers track forward from 0th block (genesis). \n",
                "parameters": [
                    {
                        "name": "node_name",
                        "description": "Node Name",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "height",
                        "description": "Block height.",
                        "in": "path",
                        "type": "number",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResultObject"
                        }
                    },
                    "401": {
                        "description": "Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Node": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                }
            }
        },
        "NodeStatus": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number"
                },
                "unconfirmed_transactions": {
                    "type": "number"
                }
            }
        },
        "ResultObject": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "contents": {
                    "type": "object"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}