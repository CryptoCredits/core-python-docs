.. _network-architecture:

Credits Network
===============

To run a Credits Core you will need a ``network.yaml`` configuration file.
It's automatically generated by ``credits dapp create`` CLI command,
however during development you probably will need to edit
``network.requirements``, ``network.transforms``, ``network.models``
and ``network.initial_state``.

Sample config:

.. code-block:: yaml
   :linenos:

    network.name: sample-finance-dapp_network
    network.uuid: b8805bde-755b-4349-9d48-a217dbf3b24d
    network.initial_state: {}
    network.enable_manhole: True
    network.hash_provider: sha256
    network.requirements:
      - git+ssh://git@github.com/CryptoCredits/credits-finance.git@hotfix/dash
      - git+ssh://git@github.com/CryptoCredits/credits-admin.git@hotfix/dash
    network.transforms:
      - credits.core.KVTransform
      - finance.tokens.transforms.TokenTransferTransform
      - finance.tokens.transforms.TokenCreditTransform
      - finance.tokens.transforms.TokenDebitTransform
    network.models:
      - finance.tokens.models.TokenModel


- ``network.name`` -- name of this network. Must be alphanumeric lowercase.
- ``network.uuid`` -- UUID of this network.
- ``network.initial_state`` -- state 0 of the network. Any predefined seed balances,
  rood admin keys etc will go here.
- ``network.enable_manhole`` -- debug feature. Is likely to be removed in final release.
- ``network.hash_provider`` -- default hash provider to be used in this network.
- ``network.requirements`` -- list of ``pip`` requirements to be installed
  and made discoverable by this network. Supports all the features
  as ``python pip`` ``requirements.txt`` file has.
- ``network.transforms`` -- list of transforms to be loaded into the Core
  and made usable.
- ``network.models`` -- list of models to be loaded into the Core
  and made usable.

